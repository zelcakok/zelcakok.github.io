{"version":3,"sources":["components/Grid/index.tsx","components/IconButton/index.tsx","components/Form/index.tsx","components/Paper/index.tsx","components/Training/index.tsx","components/Robot/index.tsx","components/Performance/index.tsx","components/Configuration/index.tsx","components/Paging/index.tsx","components/Question/index.tsx","components/QuestionPrep/index.tsx","components/Dashboard/index.tsx","components/Login/index.tsx","components/index.tsx","serviceWorker.ts","index.tsx"],"names":["Grid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handler","onClick","cardStyle","state","items","Array","addAll","toConsumableArray","forceUpdate","select","id","_this2","react_default","a","createElement","className","values","map","item","key","indexOf","style","title","img","src","custom","PureComponent","IconButton","icon","label","Form","content","form","React","createRef","layouts","close","current","classList","remove","add","open","asyncToGenerator","regenerator_default","mark","_callee","_args","arguments","wrap","_context","prev","next","length","undefined","setState","Promise","resolve","abrupt","sent","stop","ref","src_components_IconButton","Paper","Training","easyGrid","hardGrid","easyQuestion","launchQuestionForm","hardQuestion","console","log","push","src_components_Paper","float","src_components_Grid","width","height","Robot","color","moment","subtract","format","Performance","Configuration","members","addMember","name","prompt","member","index","Paging","leftBtn","Question","questStr","options","borderRadius","src_components_Paging","QuestionPrep","addEasyQuestion","multiplier","multiplicand","isNumber","parseInt","alert","addHardQuestion","toString","includes","question","Dashboard","grid","questionForm","questObject","mode","launchForm","_ref","_x","apply","location","reload","src_components_Form","src_components_Training","src_components_Performance","src_components_QuestionPrep","src_components_Robot","src_components_Configuration","src_components_Question","Login","email","password","login","getEmail","student","teacher","error","value","split","join","setTimeout","type","placeholder","autoFocus","e","preventDefault","App","element","src_components_Login","assertThisInitialized","src_components_Dashboard","Boolean","window","hostname","match","ReactDOM","render","src_components","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2b4725a.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport './index.css'\n\nimport { Item, LAYOUTS } from '../Types';\nimport Dashboard from '../Dashboard';\n\ninterface State {\n    items: Item[]\n}\n\nclass Grid extends PureComponent<any, {}> {\n    private handler: any = null;\n    private onClick: any = null;\n    private cardStyle: any = null;\n\n    public state: State = {\n        items: new Array<Item>()\n    }\n\n    constructor(props: any) {\n        super(props);\n        this.handler = props.handler;\n        this.onClick = props.onClick;\n        this.cardStyle = props.cardStyle;\n    }\n\n    addAll = (items: Item[]) => {\n        this.state.items = [...items];\n        this.forceUpdate();\n    }\n\n    select = (id: LAYOUTS) => {\n        if (this.onClick)\n            this.onClick(id);\n    }\n\n    render() {\n        return (\n            <div className=\"layout\">\n                {\n                    Object.values(this.state.items).map((item) => {\n                        let key = this.state.items.indexOf(item);\n                        return (\n                            <div key={key} className=\"card\" style={this.cardStyle} onClick={() => this.select(key)}>\n                                {\n                                    item.title && item.img ?\n                                        <div className=\"content\">\n                                            <div className=\"title\">{item.title}</div>\n                                            <img className=\"image\" src={item.img} />\n                                        </div> : <div className=\"content\">{item.custom}</div>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Grid;","import React, { PureComponent } from 'react';\nimport './index.css'\n\nclass IconButton extends PureComponent<any, {}> {\n    private icon: string = \"\";\n    private label: string = \"\";\n    private onClick: any = null;\n\n    constructor(props: any) {\n        super(props);\n        this.icon = props.icon;\n        this.label = props.label;\n        this.onClick = props.onClick;\n    }\n\n    render() {\n        return (\n            <table className=\"iconbtn-container\" onClick={this.onClick}>\n                <tbody className=\"iconbtn-content\">\n                    <tr>\n                        <td className=\"material-icons\">{this.icon}</td>\n                        <td>{this.label}</td>\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default IconButton;","import React, { PureComponent } from 'react';\nimport './index.css'\nimport IconButton from '../IconButton';\nimport Dashboard from '../Dashboard';\nimport { LAYOUTS } from '../Types';\nimport Training from '../Training';\nimport Robot from '../Robot';\nimport Performance from '../Performance';\nimport Configuration from '../Configuration';\n\ninterface State {\n  content: any\n}\n\nclass Form extends PureComponent<any, {}> {\n  public state: State = {\n    content: null\n  }\n\n  private form: React.RefObject<HTMLDivElement> = React.createRef();\n  private handler: any = null;\n\n  private layouts: any;\n\n  constructor(props: any) {\n    super(props);\n    this.handler = props.handler;\n    this.layouts = props.layouts;\n  }\n\n  close = () => {\n    this.form.current!.classList.remove(\"scaleIn\");\n    this.form.current!.classList.add(\"scaleOut\");\n  }\n\n  open = async (id: LAYOUTS = 0) => {\n    this.form.current!.classList.remove(\"scaleOut\");\n    this.form.current!.classList.add(\"scaleIn\");\n    return await this.setState({ content: (this.layouts instanceof Array) ? this.layouts[id] : this.layouts }, () => {\n      return Promise.resolve();\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"form-container\" ref={this.form}>\n        <div className=\"form-header-action\">\n          <IconButton\n            label=\"Back\"\n            icon=\"arrow_back\"\n            onClick={this.close} />\n        </div>\n        <div className=\"form-content\">\n          {this.state.content}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Form;","import React, { PureComponent } from 'react';\nimport './index.css'\n\ninterface State {\n    content: any,\n    title: string\n}\n\nclass Paper extends PureComponent<any, {}> {\n    public state: State = {\n        content: null,\n        title: \"\"\n    }\n\n    constructor(props: any) {\n        super(props);\n        this.state.title = props.title;\n        this.state.content = props.content;\n    }\n\n    componentWillReceiveProps(props: any) {\n        this.setState({ title: props.title, content: props.content });\n    }\n\n    componentDidMount() {\n        // this.setState({ title: this.props.title, content: this.props.content });\n    }\n\n    render() {\n        return (\n            <div className=\"paper-container\">\n                <div className=\"paper-title\">{this.state.title}</div>\n                <div className=\"paprt-content\">\n                    {this.state.content}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Paper;","import React, { PureComponent } from 'react';\nimport './index.css'\nimport Paper from '../Paper';\nimport Grid from '../Grid';\nimport { Item } from '../Types';\n\nclass Training extends PureComponent<any, {}> {\n  private easyGrid: React.RefObject<Grid> = React.createRef();\n  private hardGrid: React.RefObject<Grid> = React.createRef();\n  private handler: any = null;\n\n  constructor(props: any) {\n    super(props);\n    this.handler = props.handler;\n  }\n\n  componentDidMount() {\n    console.log(this.easyGrid.current!)\n    if (!this.easyGrid.current! || !this.hardGrid.current!) return;\n    let easyQuestion: Item[] = new Array<Item>();\n    easyQuestion.push(\n      { custom: <div className=\"training-card-icon easy\">1</div> },\n      { custom: <div className=\"training-card-icon easy\">2</div> },\n      { custom: <div className=\"training-card-icon easy\">3</div> },\n      { custom: <div className=\"training-card-icon easy\">4</div> },\n      { custom: <div className=\"training-card-icon easy\">5</div> },\n    );\n    this.easyGrid.current!.addAll(easyQuestion);\n\n    let hardQuestion: Item[] = new Array<Item>();\n    hardQuestion.push(\n      { custom: <div className=\"training-card-icon hard\">1</div> },\n      { custom: <div className=\"training-card-icon hard\">2</div> },\n      { custom: <div className=\"training-card-icon hard\">3</div> },\n      { custom: <div className=\"training-card-icon hard\">4</div> },\n      { custom: <div className=\"training-card-icon hard\">5</div> }\n    );\n    this.hardGrid.current!.addAll(hardQuestion);\n  }\n\n  easyQuestion = () => {\n    this.handler.launchQuestionForm(\n      <div>1 x 3 = <div className=\"training-question-slot\">?</div></div>\n    );\n  }\n\n  hardQuestion = () => {\n    this.handler.launchQuestionForm(\n      <div>3 x <div className=\"training-question-slot\">?</div> = 9</div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-header\">\n          <div className=\"form-title-floating\">\n            Training\n        </div>\n          <div className=\"form-banner training\"></div>\n        </div>\n        <div className=\"form-content\">\n          <Paper\n            title={\n              <div>\n                <span>Easy</span>\n                <span style={{ float: \"right\" }}>Completed ( 0 / 5 )</span>\n              </div>\n            }\n            content={\n              <Grid ref={this.easyGrid} cardStyle={{ width: \"100px\", height: \"100px\" }} onClick={this.easyQuestion} />\n            } />\n          <br />\n          <Paper\n            title={\n              <div>\n                <span>Hard</span>\n                <span style={{ float: \"right\" }}>Completed ( 0 / 5 )</span>\n              </div>\n            }\n            content={\n              <Grid ref={this.hardGrid} cardStyle={{ width: \"100px\", height: \"100px\" }} onClick={this.hardQuestion} />\n            } />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Training;","import React, { PureComponent } from 'react';\nimport './index.css'\nimport Paper from '../Paper';\nimport Grid from '../Grid';\n\nimport moment from 'moment';\nimport IconButton from '../IconButton';\n\nclass Robot extends PureComponent<any, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-header\">\n          <div className=\"form-title-floating\">\n            Robot Management\n          </div>\n          <div className=\"form-banner robot\"></div>\n        </div>\n        <div className=\"form-content\">\n          <Paper\n            title={\n              <div>\n                <div>\n                  <span>Status</span>\n                  <span style={{ float: \"right\", color: \"green\" }}>Connected</span>\n                </div>\n                <br />\n                <div>\n                  <span>Current Version</span>\n                  <span style={{ float: \"right\" }}>0.0.5</span>\n                </div>\n              </div>\n            }\n            content={\n              <table className=\"form-table\">\n                <thead>\n                  <tr>\n                    <td>Robot Database</td>\n                    <td className=\"right\">Actions</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>0.0.5</td>\n                    <td className=\"right disabled\">\n                      <IconButton label=\"Upload\" icon=\"cloud_upload\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>0.0.4</td>\n                    <td className=\"right\">\n                      <IconButton label=\"Upload\" icon=\"cloud_upload\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>0.0.3</td>\n                    <td className=\"right\">\n                      <IconButton label=\"Upload\" icon=\"cloud_upload\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>0.0.2</td>\n                    <td className=\"right\">\n                      <IconButton label=\"Upload\" icon=\"cloud_upload\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>0.0.1</td>\n                    <td className=\"right\">\n                      <IconButton label=\"Upload\" icon=\"cloud_upload\" />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            } />\n          <br />\n          <Paper\n            title={\n              <div>\n                <span>History</span>\n                <span style={{ float: \"right\" }}>Current Version: 0.0.5</span>\n              </div>\n            }\n            content={\n              <table className=\"form-table\">\n                <thead>\n                  <tr>\n                    <td>Revised Version</td>\n                    <td className=\"right\">Creation Time</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>0.0.5</td>\n                    <td className=\"right\">{moment().subtract(1, \"day\").format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                  </tr>\n                  <tr>\n                    <td>0.0.4</td>\n                    <td className=\"right\">{moment().subtract(2, \"day\").subtract(10, \"minutes\").format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                  </tr>\n                  <tr>\n                    <td>0.0.3</td>\n                    <td className=\"right\">{moment().subtract(3, \"day\").subtract(16, \"hours\").format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                  </tr>\n                  <tr>\n                    <td>0.0.2</td>\n                    <td className=\"right\">{moment().subtract(4, \"day\").subtract(8, \"hours\").format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                  </tr>\n                  <tr>\n                    <td>0.0.1</td>\n                    <td className=\"right\">{moment().subtract(5, \"day\").subtract(55, \"minutes\").format(\"YYYY-MM-DD HH:mm:ss\")}</td>\n                  </tr>\n                </tbody>\n              </table>\n            } />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Robot;","import React, { PureComponent } from 'react';\nimport './index.css'\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport moment from 'moment';\n\nclass Performance extends PureComponent<any, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-header\">\n          <div className=\"form-title-floating\">\n            Performance\n        </div>\n          <div className=\"form-banner performance\"></div>\n        </div>\n        <div className=\"form-content\">\n          <Paper\n            title={\n              <div>\n                <div>\n                  <span>Result</span>\n                  <span style={{ float: \"right\", color: \"green\" }}>Good</span>\n                </div>\n                <br />\n                <div>\n                  <span>Last Evaluation</span>\n                  <span style={{ float: \"right\" }}>{moment().subtract(1, 'day').format(\"YYYY-MM-DD HH:mm:ss\")}</span>\n                </div>\n              </div>\n            }\n            content={\n              <table className=\"form-table\">\n                <thead>\n                  <tr>\n                    <td>Questions</td>\n                    <td className=\"padding-right\">Answered</td>\n                    <td className=\"right\">Result</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>1 x 3 = ?</td>\n                    <td className=\"padding-right\">3</td>\n                    <td className=\"right\">\n                      True\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>8 x 7 = ?</td>\n                    <td className=\"padding-right\">56</td>\n                    <td className=\"right\">\n                      True\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>9 x ? = 27</td>\n                    <td className=\"padding-right\">3</td>\n                    <td className=\"right\">\n                      True\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>3 x ? = 21</td>\n                    <td className=\"padding-right\">6</td>\n                    <td className=\"right\">\n                      False\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>? x 9 = 63</td>\n                    <td className=\"padding-right\">6</td>\n                    <td className=\"right\">\n                      False\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            } />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Performance;","import React, { PureComponent } from 'react';\nimport './index.css'\nimport Paper from '../Paper';\nimport Grid from '../Grid';\nimport IconButton from '../IconButton';\nimport { ENGINE_METHOD_DIGESTS } from 'constants';\nimport { timingSafeEqual } from 'crypto';\n\ninterface State {\n  members: string[]\n}\n\nclass Configuration extends PureComponent<any, {}> {\n  public state: State = {\n    members: new Array<string>()\n  }\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    let members = [\n      \"Alice\", \"Zelca\"\n    ]\n    this.setState({ members });\n  }\n\n  addMember = () => {\n    let name: string | any = prompt(\"Please enter the new member's name:\");\n    this.state.members.push(name);\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-header\">\n          <div className=\"form-title-floating\" style={{ color: \"black\" }}>\n            Configuration\n          </div>\n          <div className=\"form-banner config\"></div>\n        </div>\n        <div className=\"form-content\">\n          <Paper\n            title={\n              <div>\n                <span>Group Information</span>\n                <span style={{ float: \"right\" }}>Group 13</span>\n              </div>\n            }\n            content={\n              <table className=\"form-table\">\n                <thead>\n                  <tr>\n                    <td>Name</td>\n                    <td className=\"right\">\n                      <IconButton label=\"Member\" icon=\"add\" onClick={this.addMember} />\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.members.map((member, index) => { return <tr key={index}><td>{member}</td></tr> })}\n                </tbody>\n              </table>\n            } />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Configuration;","import React, { PureComponent } from 'react';\nimport './index.css'\n\nclass Paging extends PureComponent<any, {}> {\n    private leftBtn: React.RefObject<HTMLInputElement> = React.createRef();\n\n    constructor(props: any) {\n        super(props);\n    }\n\n    componentDidMount() {\n        // this.leftBtn.current!.before(\"<\")\n    }\n\n    render() {\n        return (\n            <div className=\"paging-container\">\n                <div className=\"paging-button left\">\n                    <span className=\"material-icons\">keyboard_arrow_left</span>\n                </div>\n                <div className=\"paging-button right\">\n                    <span className=\"material-icons\">keyboard_arrow_right</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Paging;","import React, { PureComponent } from 'react';\nimport './index.css'\nimport Grid from '../Grid';\nimport Paging from '../Paging';\n\ninterface State {\n    questStr: any\n}\n\nclass Question extends PureComponent<any, {}> {\n    public state: State = {\n        questStr: null\n    }\n    private options: React.RefObject<Grid> = React.createRef();\n\n    constructor(props: any) {\n        super(props);\n        this.state.questStr = props.questStr;\n    }\n\n    componentDidMount() {\n        let options = [\n            { custom: <div className=\"question-option\">1</div> },\n            { custom: <div className=\"question-option\">2</div> },\n            { custom: <div className=\"question-option\">3</div> },\n            { custom: <div className=\"question-option\">4</div> },\n            { custom: <div className=\"question-option\">5</div> },\n            { custom: <div className=\"question-option\">6</div> },\n            { custom: <div className=\"question-option\">7</div> },\n            { custom: <div className=\"question-option\">8</div> },\n            { custom: <div className=\"question-option\">9</div> }\n        ];\n        this.options.current!.addAll(options);\n    }\n\n    render() {\n        return (\n            <div className=\"question-container\">\n                <div className=\"form-title\">\n                    Question\n                    <span style={{ float: \"right\" }}>( 1 / 10 )</span>\n                </div>\n                <div className=\"question-title\">{this.state.questStr}</div>\n                <div className=\"question-options-frame\">\n                    <Grid ref={this.options} handler={this} cardStyle={{ width: \"90px\", height: \"90px\", borderRadius: \"100%\" }} />\n                </div>\n                <Paging />\n            </div>\n        )\n    }\n}\n\nexport default Question;","import React, { PureComponent } from 'react';\nimport './index.css'\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport { Multiplication } from '../Types';\nimport { isNumber } from 'util';\n\ninterface State {\n  easyQuestion: Multiplication[],\n  hardQuestion: Multiplication[]\n}\n\nclass QuestionPrep extends PureComponent<any, {}> {\n  public state: State = {\n    easyQuestion: new Array<Multiplication>(),\n    hardQuestion: new Array<Multiplication>(),\n  }\n  constructor(props: any) {\n    super(props);\n  }\n\n  addEasyQuestion = () => {\n    let multiplier: any = prompt(\"Please enter the multiplier:\");\n    if (!multiplier) return;\n    let multiplicand: any = prompt(\"Please enter the multiplicand:\");\n    if (!multiplicand) return;\n    if (!isNumber(parseInt(multiplier)) || !isNumber(parseInt(multiplicand)) || (multiplier * multiplicand) > 100 || (multiplier * multiplicand) < 0) {\n      alert(\"Please enter valid numbers\");\n      return;\n    }\n    this.state.easyQuestion.push({ multiplier, multiplicand });\n    this.forceUpdate();\n  }\n\n  addHardQuestion = () => {\n    let multiplier: any = prompt(\"Please enter the multiplier:\");\n    if (!multiplier) return;\n    let multiplicand: any = prompt(\"Please enter the expected answer:\");\n    if (!multiplicand) return;\n    if ((multiplicand / multiplier).toString().includes(\".\") || parseInt(multiplier) > 10 || parseInt(multiplier) <= 0) {\n      alert(\"The answer is not an integer value\");\n      return;\n    }\n    this.state.hardQuestion.push({ multiplier, multiplicand });\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-header\">\n          <div className=\"form-title-floating\" style={{ color: \"black\" }}>\n            Questions\n        </div>\n          <div className=\"form-banner question\"></div>\n        </div>\n        <div className=\"form-content\">\n          <Paper\n            title={\n              <div>\n                <span>Easy</span>\n                <span className=\"right\">\n                  <IconButton label=\"Question\" icon=\"add\" onClick={this.addEasyQuestion} />\n                </span>\n              </div>\n            }\n            content={\n              <table className=\"form-table\">\n                <thead>\n                  <tr>\n                    <td className=\"padding-right\">Multiplier</td>\n                    <td className=\"padding-right\">Multiplication</td>\n                    <td className=\"padding-right\">Expected Answer</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    this.state.easyQuestion.map((question, index) => {\n                      return (\n                        <tr key={index}>\n                          <td className=\"padding-right\">{question.multiplier}</td>\n                          <td className=\"padding-right\">{question.multiplicand}</td>\n                          <td className=\"right\">{question.multiplier * parseInt(question.multiplicand.toString())}</td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n              </table>\n            } />\n          <br />\n          <Paper\n            title={\n              <div>\n                <span>Hard</span>\n                <span className=\"right\">\n                  <IconButton label=\"Question\" icon=\"add\" onClick={this.addHardQuestion} />\n                </span>\n              </div>\n            }\n            content={\n              <table className=\"form-table\">\n                <thead>\n                  <tr>\n                    <td className=\"padding-right\">Multiplier</td>\n                    <td className=\"padding-right\">Multiplication</td>\n                    <td className=\"padding-right\">Expected Answer</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    this.state.hardQuestion.map((question, index) => {\n                      return (\n                        <tr key={index}>\n                          <td className=\"padding-right\">{question.multiplier}</td>\n                          <td className=\"padding-right\">{parseInt(question.multiplicand.toString()) / question.multiplier}</td>\n                          <td className=\"right\">{question.multiplicand}</td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n              </table>\n            } />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QuestionPrep;","import React, { PureComponent } from 'react';\nimport './index.css';\n\nimport { Item, LAYOUTS } from '../Types';\nimport Grid from '../Grid';\nimport Form from '../Form';\nimport Training from '../Training';\nimport Robot from '../Robot';\nimport Performance from '../Performance';\nimport Configuration from '../Configuration';\nimport Question from '../Question';\nimport QuestionPrep from '../QuestionPrep';\nimport IconButton from '../IconButton';\n\ninterface State {\n  questStr: any\n}\n\nclass Dashboard extends PureComponent<any, {}> {\n  public state: State = {\n    questStr: null\n  }\n  private grid: React.RefObject<Grid> = React.createRef();\n  private form: React.RefObject<Form> = React.createRef();\n  private questionForm: React.RefObject<Form> = React.createRef();\n  private questObject: React.RefObject<Question> = React.createRef();\n\n  private mode: string = \"\";\n\n  constructor(props: any) {\n    super(props);\n    this.mode = props.mode;\n  }\n\n  componentDidMount() {\n    let items = new Array<Item>();\n    items.push({ title: \"Training\", img: \"https://cdn.kastatic.org/ka-perseus-images/45a518b64df15c3b0319e2b00b5f6fd4edb7f009.png\" });\n    items.push({ title: \"Performance\", img: \"https://d3frsattnbx5l6.cloudfront.net/1544957431448-speedometer-speedometer.png\" });\n    if (this.mode === \"teacher\") {\n      items.push({ title: \"Questions\", img: \"http://pluspng.com/img-png/png-exam-png-ico-512.png\" });\n      items.push({ title: \"Robot Management\", img: \"https://upload.wikimedia.org/wikipedia/commons/3/38/Robot-clip-art-book-covers-feJCV3-clipart.png\" });\n      items.push({ title: \"Configuration\", img: \"http://cartonomy.com/wp-content/uploads/2014/10/icon-setup.png\" });\n    }\n    this.grid.current!.addAll(items);\n  }\n\n  launchForm = (id: LAYOUTS) => {\n    this.form.current!.open(id);\n  }\n\n  launchQuestionForm = async (questStr: string) => {\n    await this.questionForm.current!.open();\n    this.questObject.current!.setState({ questStr });\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <div className=\"base\"></div>\n        <span className=\"appTitle\">Multiplication Tutor</span>\n        <span className=\"appExit\">\n          <IconButton label=\"Logout\" icon=\"exit_to_app\" onClick={()=>location.reload()}/>\n        </span>\n        <div className=\"grid\">\n          <Grid ref={this.grid} handler={this} onClick={this.launchForm} />\n        </div>\n        <Form ref={this.form} handler={this} layouts={\n          this.mode === \"teacher\" ?\n            [\n              <Training handler={this} />,\n              <Performance handler={this} />,\n              <QuestionPrep handler={this} />,\n              <Robot handler={this} />,\n              <Configuration handler={this} />\n            ] : [\n              <Training handler={this} />,\n              <Performance handler={this} />,\n            ]\n        } />\n        <Form ref={this.questionForm} handler={this} layouts={\n          <Question ref={this.questObject} questStr={this.state.questStr} />\n        } />\n      </div>\n    )\n  }\n}\n\nexport default Dashboard;","import React, { PureComponent } from 'react';\nimport './index.css'\n\nclass Login extends PureComponent<any, {}> {\n    private handler: any = null;\n    private form: React.RefObject<HTMLDivElement> = React.createRef();\n    private email: React.RefObject<HTMLInputElement> = React.createRef();\n    private password: React.RefObject<HTMLInputElement> = React.createRef();\n\n    constructor(props: any) {\n        super(props);\n        this.handler = props.handler;\n    }\n\n    login = () => {\n        let email: string = this.getEmail();\n        if (email.includes(\"student\")) this.handler.student();\n        else if (email.includes(\"teacher\")) this.handler.teacher();\n        else this.error();\n    }\n\n    getEmail = () => {\n        let email = this.email.current!.value;\n        if (!email || email.split(\" \").join().length === 0) throw this.error();\n        return email;\n    }\n\n    error = () => {\n        this.form.current!.classList.add(\"shake\");\n        setTimeout(() => {\n            this.form.current!.classList.remove(\"shake\");\n        }, 200);\n        throw \"Wrong credential error\";\n    }\n\n    render() {\n        return (\n            <div className=\"login-container\">\n                <div className=\"login-background\"></div>\n                <div className=\"login-form\" ref={this.form}>\n                    <form>\n                        <div className=\"login-form-banner\">\n                            <div className=\"login-form-banner-container\">\n                                <div className=\"login-title\">Multiplication Tutor</div>\n                            </div>\n                        </div>\n                        <div className=\"login-form-controls-container\">\n                            <div className=\"login-form-controls\">\n                                <input type=\"input\" className=\"login-control\" placeholder=\"Type student / teacher here\" ref={this.email} autoFocus/>\n                                <input type=\"password\" className=\"login-control\" placeholder=\"Dummy\" ref={this.password} />\n                            </div>\n                            <button type=\"submit\" className=\"login-control-button\" onClick={(e) => { e.preventDefault(); this.login(); }}>Login</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, { PureComponent } from 'react';\nimport './index.css'\n\nimport Dashboard from './Dashboard';\nimport Login from './Login';\n\ninterface State {\n  element: any\n}\n\nclass App extends PureComponent<any, {}> {\n  public state: State = {\n    element: <Login handler={this} />\n  }\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  student = () => {\n    let element = <Dashboard mode=\"student\" />;\n    this.setState({ element });\n  }\n\n  teacher = () => {\n    let element = <Dashboard mode=\"teacher\" />;\n    this.setState({ element });\n  }\n\n  render() {\n    return this.state.element;\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}